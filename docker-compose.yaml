services:
  #################
  # REVERSE PROXY #
  #################

  traefik:
    container_name: proxy
    image: traefik:v3
    command:
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--providers.docker.defaultRule=Host(`{{ normalize .ContainerName }}.majdori.xyz`)'
      - '--entryPoints.http.address=:80'
      - '--entryPoints.http.http.redirections.entryPoint.to=https'
      - '--entryPoints.http.http.redirections.entryPoint.scheme=https'
      - '--entryPoints.https.address=:443'
      - '--entryPoints.https.http.tls.certResolver=letsencrypt'
      - '--entryPoints.https.http.tls.domains[0].main=majdori.xyz'
      - '--entryPoints.https.http.tls.domains[0].sans=*.majdori.xyz'
      - '--certificatesresolvers.letsencrypt.acme.dnschallenge=true'
      - '--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare'
      - '--certificatesresolvers.letsencrypt.acme.email=${TRAEFIK_EMAIL}'
      - '--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json'
    environment:
      - CLOUDFLARE_DNS_API_TOKEN=${CLOUDFLARE_DNS_API_TOKEN:?}
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    volumes:
      - ${DATA_PATH}/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`proxy.${PROJECT_NAME}.majdori.xyz`)
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      - traefik.http.routers.traefik.entrypoints=https
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt

  ####################
  # PROJECT TEMPLATE #
  ####################

  project:
    container_name: ${PROJECT_NAME}
    build:
      context: .
    ports:
      - '${PROJECT_PORT:-3000}:3000'
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?schema=public
    labels:
      - traefik.enable=true

  ############
  # DATABASE #
  ############

  postgres:
    container_name: database
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ${POSTGRES_VOLUME}:/var/lib/postgresql/data

  nocodb:
    container_name: database-admin
    image: nocodb/nocodb:latest
    restart: always
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
    volumes:
      - ${NOCODB_VOLUME}:/usr/app/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.nocodb.rule=Host(`db.${PROJECT_NAME}.majdori.xyz`)
      - traefik.http.routers.nocodb.entrypoints=https
      - traefik.http.routers.nocodb.tls.certresolver=letsencrypt
